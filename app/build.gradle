plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id "com.google.protobuf" version "0.8.17"
    id 'kotlinx-serialization'
}

android {
    namespace 'com.rulhouse.openexchangeratesdemo'
    compileSdk 33

    defaultConfig {
        applicationId "com.rulhouse.openexchangeratesdemo"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Compose
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-alpha03'
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$httplogging_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // Test
    // For instrumented tests.// Core library
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation ('com.google.dagger:hilt-android-testing:2.44.2')
    androidTestImplementation ('androidx.test.ext:junit:1.1.4')
    androidTestImplementation ('androidx.test:runner:1.5.1')
    androidTestImplementation ('androidx.test:rules:1.5.0')
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44.2")

    testImplementation 'androidx.test:core:1.5.0'
    testImplementation('com.google.dagger:hilt-android-testing:2.44.2')
    testImplementation 'junit:junit:4.13.2'
    testImplementation ('androidx.test:runner:1.5.1')
    testImplementation ('androidx.test:rules:1.5.0')
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    kaptTest("com.google.dagger:hilt-android-compiler:2.44.2")

    // Room
    implementation("androidx.room:room-runtime:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // Data Store -- Proto Buf
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.18.0"
    implementation "androidx.datastore:datastore:1.0.0"

    // Serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3")
}

protobuf {
    protoc {
        if (osdetector.os == "osx") {
            artifact = 'com.google.protobuf:protoc:3.14.0:osx-x86_64'
        } else {
            artifact = 'com.google.protobuf:protoc:3.14.0'
        }
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

//指定原始.proto文件的位置
android {
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java'
            }
            proto {
                srcDirs 'src/main/proto'
            }
        }
    }
}